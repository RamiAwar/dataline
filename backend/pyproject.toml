[tool.poetry]
name = "dataline"
version = "0.1.0"
description = ""
authors = ["Rami <rami.awar.ra@gmail.com>"]
readme = "README.md"
packages = [{include = "dataline"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
fastapi = "0.105.0"
uvicorn = {extras = ["standard"], version = "^0.21.1"}
psycopg2-binary = "^2.9.9"
pymysql = "^1.1.1"
cryptography = "^43.0.1"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.27"}
rapidfuzz = "^3.0.0"
psycopg = {extras = ["pool"], version = "^3.1.9"}
pydantic = "2.7"
openai = "^1.11.0"
python-multipart = "^0.0.9"
aiosqlite = "^0.20.0"
alembic = "^1.13.1"
pydantic-settings = "^2.2.1"
asyncpg = "^0.29.0"
jinja2 = "^3.1.3"
pytest-asyncio = "^0.23.6"
langchain = "^0.1.20"
langgraph = "^0.0.48"
langsmith = "^0.1.57"
langchain-openai = "^0.1.6"
mirascope = "^0.18.2"
tenacity = "^8.2.3"
pandas = "^2.2.2"
pyreadstat = "^1.2.7"
sentry-sdk = {extras = ["fastapi"], version = "^2.8.0"}
snowflake-sqlalchemy = "^1.6.1"
openpyxl = "^3.1.5"
deepeval = "^0.21.55"
pyodbc = "^5.1.0"
posthog = "^3.6.6"


[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
pre-commit = "^3.4.0"
pyinstaller = "^5.10.1"
pytest = "^8.0.2"
jupyterlab = "^4.0.5"
mypy = "^1.6.1"
cx-freeze = "^6.15.14"
types-pygments = "^2.17.0.20240310"
pytest-env = "^1.1.3"
pylint-pydantic = "^0.3.2"

[tool.ruff]
ignore = ["E501"]
line-length = 120

[tool.black]
line-length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.mypy]
plugins = "pydantic.mypy"

show_error_codes = true

disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = false

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false

no_implicit_optional = true
no_implicit_reexport = true
strict_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unused_configs = true
warn_return_any = false
warn_unreachable = true

exclude = [
    '^bruno/*$',  # TOML literal string (single-quotes, no escaping necessary)
    "^notebooks/*$",  # TOML basic string (double-quotes, backslash and other characters need escaping)
    "^scripts/*$",
    "^hooks/*$",
    "^notebooks/*$",
    "^__pycache__/*$",
    "^venv/*$",
    "^build/*$",
]

[[tool.mypy.overrides]]
module = [
    "async_asgi_testclient",
    # https://github.com/hephex/asyncache/issues/14
    "asyncache",
    "deepmerge",
]


[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.pylint.messages_control]
max-line-length = 120
disable = ["missing-class-docstring", "missing-function-docstring", "invalid-name", "unspecified-encoding", "missing-module-docstring"]
